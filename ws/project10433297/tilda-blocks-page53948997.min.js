window.isMobile = !1;
if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
    window.isMobile = !0
}

function t450_showMenu(recid) {
    var rec = document.getElementById('rec' + recid);
    if (!rec) return;
    var menu = rec.querySelector('.t450');
    var overlay = rec.querySelector('.t450__overlay');
    var menuElements = rec.querySelectorAll('.t450__overlay, .t450__close, a[href*="#"]');
    if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupShowed');
    document.body.classList.add('t450__body_menushowed');
    if (menu) menu.classList.add('t450__menu_show');
    if (overlay) overlay.classList.add('t450__menu_show');
    if (menu) {
        menu.addEventListener('clickedAnchorInTooltipMenu', function() {
            t450_closeMenu(menu, overlay)
        })
    }
    Array.prototype.forEach.call(menuElements, function(element) {
        element.addEventListener('click', function() {
            if (element.closest('.tooltipstered, .t-menusub__target-link, .t794__tm-link, .t966__tm-link, .t978__tm-link')) return;
            if (element.href && (element.href.substring(0, 7) === '#price:' || element.href.substring(0, 9) === '#submenu:')) return;
            t450_closeMenu(menu, overlay)
        })
    });
    document.addEventListener('keydown', function(e) {
        if (e.keyCode === 27) {
            document.body.classList.remove('t390__body_popupshowed');
            var popups = document.querySelectorAll('.t390');
            Array.prototype.forEach.call(popups, function(popup) {
                popup.classList.remove('t390__popup_show')
            })
        }
    });
    rec.addEventListener('click', function(e) {
        if (e.target.closest('.t966__tm-link, .t978__tm-link')) {
            t450_checkSize(recid);
            if (e.target.closest('.t978__tm-link')) {
                setTimeout(function() {
                    var hookLink = e.target.closest('.t978__tm-link');
                    var menuBlock = hookLink.nextElementSibling;
                    var submenuLinks = menuBlock ? menuBlock.querySelectorAll('.t978__menu-link') : [];
                    Array.prototype.forEach.call(submenuLinks, function(link) {
                        link.addEventListener('click', function() {
                            t450_checkSize(recid)
                        })
                    })
                }, 300)
            }
        }
    });
    menu.addEventListener('menuOverflow', function() {
        t450_checkSize(recid)
    });
    t450_highlight(recid)
}

function t450_closeMenu(menu, overlay) {
    if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupHidden');
    document.body.classList.remove('t450__body_menushowed');
    if (menu) menu.classList.remove('t450__menu_show');
    if (overlay) overlay.classList.remove('t450__menu_show')
}

function t450_checkSize(recid) {
    var rec = document.getElementById('rec' + recid);
    var menu = rec ? rec.querySelector('.t450') : null;
    if (!menu) return;
    var container = menu.querySelector('.t450__container');
    var topContainer = menu.querySelector('.t450__top');
    var rightContainer = menu.querySelector('.t450__rightside');
    setTimeout(function() {
        var topContainerHeight = topContainer ? topContainer.offsetHeight : 0;
        var rightContainerHeight = rightContainer ? rightContainer.offsetHeight : 0;
        var containerPaddingTop = container ? window.getComputedStyle(container).paddingTop : '0';
        var containerPaddingBottom = container ? window.getComputedStyle(container).paddingBottom : '0';
        containerPaddingTop = parseInt(containerPaddingTop, 10);
        containerPaddingBottom = parseInt(containerPaddingBottom, 10);
        if (topContainerHeight + rightContainerHeight + containerPaddingTop + containerPaddingBottom > document.documentElement.clientHeight) {
            menu.classList.add('t450__overflowed')
        } else {
            menu.classList.remove('t450__overflowed')
        }
    })
}

function t450_appearMenu(recid) {
    var rec = document.getElementById('rec' + recid);
    var burger = rec ? rec.querySelector('.t450__menu__content') : null;
    if (!burger) return;
    var burgerAppearOffset = burger ? burger.getAttribute('data-appearoffset') : '';
    var burgerHideOffset = burger ? burger.getAttribute('data-hideoffset') : '';
    if (burgerAppearOffset) {
        burgerAppearOffset = t450_appearMenuParseNumber(burgerAppearOffset);
        if (window.pageYOffset >= burgerAppearOffset) {
            if (burger.classList.contains('t450__beforeready')) {
                burger.classList.remove('t450__beforeready')
            }
        } else {
            burger.classList.add('t450__beforeready')
        }
    }
    if (burgerHideOffset) {
        burgerHideOffset = t450_appearMenuParseNumber(burgerHideOffset);
        var scrollHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);
        if (window.pageYOffset + window.innerHeight >= scrollHeight - burgerHideOffset) {
            if (!burger.classList.contains('t450__beforeready')) {
                burger.classList.add('t450__beforeready')
            }
        } else if (burgerAppearOffset) {
            if (window.pageYOffset >= burgerAppearOffset) {
                burger.classList.remove('t450__beforeready')
            }
        } else {
            burger.classList.remove('t450__beforeready')
        }
    }
}

function t450_appearMenuParseNumber(string) {
    if (string.indexOf('vh') > -1) {
        string = Math.floor((window.innerHeight * (parseInt(string) / 100)))
    }
    return parseInt(string, 10)
}

function t450_initMenu(recid) {
    var rec = document.getElementById('rec' + recid);
    var menu = rec ? rec.querySelector('.t450') : null;
    var overlay = rec ? rec.querySelector('.t450__overlay') : null;
    var burger = rec ? rec.querySelector('.t450__burger_container') : null;
    var menuLinks = rec ? rec.querySelectorAll('.t-menu__link-item.t450__link-item_submenu') : [];
    var hook = menu ? menu.getAttribute('data-tooltip-hook') : '';
    if (hook) {
        document.addEventListener('click', function(e) {
            if (e.target.closest('a[href="' + hook + '"]')) {
                e.preventDefault();
                t450_closeMenu(menu, overlay);
                t450_showMenu(recid);
                t450_checkSize(recid)
            }
        })
    }
    if (burger) {
        burger.addEventListener('click', function() {
            t450_closeMenu(menu, overlay);
            t450_showMenu(recid);
            t450_checkSize(recid)
        })
    }
    window.addEventListener('resize', function() {
        t450_checkSize(recid)
    });
    if (!window.isMobile) return;
    Array.prototype.forEach.call(menuLinks, function(link) {
        link.addEventListener('click', function() {
            t450_checkSize(recid)
        })
    })
}

function t450_highlight(recid) {
    var url = window.location.href;
    var pathname = window.location.pathname;
    var hash = window.location.hash;
    if (url.substr(url.length - 1) === '/') {
        url = url.slice(0, -1)
    }
    if (pathname.substr(pathname.length - 1) === '/') {
        pathname = pathname.slice(0, -1)
    }
    if (pathname.charAt(0) === '/') {
        pathname = pathname.slice(1)
    }
    if (pathname === '') {
        pathname = '/'
    }
    var shouldBeActiveElements = document.querySelectorAll('.t450__menu a[href=\'' + url + '\'], ' + '.t450__menu a[href=\'' + url + '/\'], ' + '.t450__menu a[href=\'' + pathname + '\'], ' + '.t450__menu a[href=\'/' + pathname + '\'], ' + '.t450__menu a[href=\'' + pathname + '/\'], ' + '.t450__menu a[href=\'/' + pathname + '/\']' + (hash ? ', .t450__menu a[href=\'' + hash + '\']' : ''));
    var rec = document.getElementById('rec' + recid);
    var menuLinks = rec ? rec.querySelectorAll('.t450__menu a') : [];
    Array.prototype.forEach.call(menuLinks, function(link) {
        if (link.getAttribute('data-highlighted-by-user') !== 'y') link.classList.remove('t-active')
    });
    Array.prototype.forEach.call(shouldBeActiveElements, function(link) {
        link.classList.add('t-active')
    })
}

function t833_init(recid) {
    var rec = document.querySelector('#rec' + recid);
    if (!rec) return;
    var wrapper = rec.querySelector('.t833__sliderwrapper');
    if (!wrapper) return;
    var dataContainer = rec.querySelector('.t833');
    if (!dataContainer) return;
    var coverRecs = dataContainer.getAttribute('data-coverslider-rec-ids');
    t833_showOnCertainWidth(rec, wrapper);
    if (document.querySelector('#allrecords').getAttribute('data-tilda-mode') === 'edit') {
        var recDemo = rec.querySelector('.t833__demo');
        t833_addAnimation(recDemo, wrapper);
        return
    }
    if (coverRecs) {
        coverRecs = coverRecs.split(',');
        Array.prototype.forEach.call(coverRecs, function(rec) {
            var currentRec = document.querySelector('#rec' + rec);
            var currentWrapper = wrapper.cloneNode(!0);
            currentWrapper.style.position = 'absolute';
            if (currentRec) {
                t833_addAnimation(currentRec, currentWrapper)
            }
        })
    } else {
        var nextBlock = rec.nextElementSibling;
        var prevBlock = rec.previousElementSibling;
        var currentWrapper = wrapper.cloneNode(!0);
        currentWrapper.style.position = 'absolute';
        if (nextBlock && nextBlock.querySelector('.t-cover')) {
            t833_addAnimation(nextBlock, currentWrapper)
        } else if (prevBlock && prevBlock.querySelector('.t-cover')) {
            t833_addAnimation(prevBlock, currentWrapper)
        }
    }
}

function t833_showOnCertainWidth(rec, wrapper) {
    currentClass = rec.getAttribute('class');
    classListArr = currentClass.split(' ');
    Array.prototype.forEach.call(classListArr, function(classItem) {
        if (classItem.indexOf('t-screen') !== -1) {
            wrapper.classList.add(classItem)
        }
    })
}

function t833_addAnimation(currentRec, wrapper) {
    if (!currentRec) return;
    currentRec.setAttribute('data-animationappear', 'off');
    currentRec.classList.remove('r_hidden');
    var currentRecType = currentRec.getAttribute('data-record-type');
    var isT941 = currentRecType === '941';
    var isT996 = currentRecType === '996';
    if (currentRecType === '396') {
        currentRec.querySelector('.t396__filter').insertAdjacentElement('afterend', wrapper);
        wrapper.style.zIndex = '0'
    }
    var coverWrapper;
    if (isT941) {
        coverWrapper = currentRec.querySelector('.t941__cover-wrap')
    } else if (isT996) {
        coverWrapper = currentRec.querySelector('.t996__cover-wrapper')
    } else {
        coverWrapper = currentRec.querySelector('.t-cover')
    }
    if (coverWrapper) {
        if (isT941) {
            wrapper.classList.add('t941__cover');
            coverWrapper.appendChild(wrapper)
        } else if (isT996) {
            wrapper.classList.add('t996__cover');
            coverWrapper.appendChild(wrapper)
        } else {
            coverWrapper.querySelector('.t-cover__filter').insertAdjacentElement('afterend', wrapper)
        }
        wrapper.style.zIndex = '0'
    }
    var images = t833_createImageArr(wrapper);
    var imageCount = images.length;
    var imagesLoaded = 0;
    for (var i = 0; i < imageCount; i++) {
        images[i].onload = function() {
            imagesLoaded++;
            if (imagesLoaded == imageCount && currentRec.length !== 0) {
                setTimeout(function() {
                    t833_changeSlide(currentRec)
                }, 3000)
            }
        }
    }
    var slider = currentRec.querySelector('.t833__slider');
    var allSlides = currentRec.querySelectorAll('.t833__slide');
    var numberOfSlides = allSlides.length;
    if (numberOfSlides === 3 || numberOfSlides === 2) {
        Array.prototype.forEach.call(allSlides, function(slide) {
            var cloneSlide = slide.cloneNode(!0);
            slider.appendChild(cloneSlide)
        })
    }
}

function t833_createImageArr(wrapper) {
    var imagesSrc = [];
    allSlides = wrapper.querySelectorAll('.t833__slide');
    Array.prototype.forEach.call(allSlides, function(slideItem) {
        imagesSrc.push(slideItem.getAttribute('data-original'))
    });
    var images = [];
    Array.prototype.forEach.call(imagesSrc, function(image, i) {
        images[i] = new Image();
        images[i].src = image
    });
    return images
}

function t833_changeSlide(currentRec) {
    var sliderWrapper = currentRec.querySelectorAll('.t833__sliderwrapper');
    Array.prototype.forEach.call(sliderWrapper, function(sliderItem) {
        var isLoaded = sliderItem.getAttribute('data-loaded') && sliderItem.getAttribute('data-loaded') === 'yes' ? !0 : !1;
        if (!isLoaded) {
            var slides = sliderItem.querySelectorAll('.t833__slide');
            var firstSlide = sliderItem.querySelector('.t833__slide:first-child');
            var numberOfSlides = slides.length;
            firstSlide.classList.add('t833__slide_fx1');
            setTimeout(function() {
                t833_kenBurns(slides, numberOfSlides, 1)
            }, 500);
            sliderItem.setAttribute('data-loaded', 'yes')
        }
    });

    function t833_kenBurns(slides, numberOfSlides, i) {
        if (i == numberOfSlides) i = 0;
        slides[i].classList.add('t833__slide_fx');
        if (i === 0 && slides[numberOfSlides - 2]) {
            slides[numberOfSlides - 2].classList.remove('t833__slide_fx');
            slides[numberOfSlides - 2].classList.remove('t833__slide_fx1')
        }
        if (i === 1 && slides[numberOfSlides - 1]) {
            slides[numberOfSlides - 1].classList.remove('t833__slide_fx');
            slides[numberOfSlides - 1].classList.remove('t833__slide_fx1');
            Array.prototype.forEach.call(slides, function(slide) {
                slide.classList.remove('t833__slide_opacity')
            })
        }
        if (i > 1 && slides[i - 2]) {
            slides[i - 2].classList.remove('t833__slide_fx');
            slides[i - 2].classList.remove('t833__slide_fx1')
        }
        setTimeout(function() {
            t833_kenBurns(slides, numberOfSlides, i + 1)
        }, 5000)
    }
}